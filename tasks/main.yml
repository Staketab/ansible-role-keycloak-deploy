---
- name: Ensure '{{ deployment_workdir }}' exists
  ansible.builtin.file:
    path: "{{ deployment_workdir }}"
    state: directory
    mode: 0755

- name: Install and upgrade pip
  pip:
    name: pip
    extra_args: --upgrade
    executable: pip3

- name: install pip3
  apt: name=python3-pip state=present 

- name: Install python3 modules
  ansible.builtin.pip:
    name: bottle
    state: forcereinstall
  loop:
  - bottle
  - docker-compose

# - name: Run expect to wait for a successful PXE boot via out-of-band CIMC
#   ansible.builtin.shell: |
#     pip3 install dxlmispservice --root-user-action=ignore
#     sudo apt install pkg-config
#     pip3 install setuptools-rust --root-user-action=ignore
#     pip install docker-compose --root-user-action=ignore
- name: Ensure system is PXE booted and software is installed
  hosts: your_target_host_group_or_host
  tasks:
    - name: Ensure pip3 is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present
      become: yes

    - name: Install dxlmispservice with pip3
      ansible.builtin.pip:
        name: dxlmispservice
        extra_args: --root-user-action=ignore
      become: yes
      
    - name: Ensure pkg-config is installed
      ansible.builtin.apt:
        name: pkg-config
        state: present
      become: yes

    - name: Install setuptools-rust with pip3
      ansible.builtin.pip:
        name: setuptools-rust
        extra_args: --root-user-action=ignore
      become: yes

    - name: Install docker-compose with pip
      ansible.builtin.pip:
        name: docker-compose
        extra_args: --root-user-action=ignore
      become: yes

    # - name: Wait for PXE boot to complete
    #   ansible.builtin.wait_for:
    #     host: "{{ inventory_hostname }}"
    #     port: your_pxe_boot_check_port
    #     delay: your_delay_in_seconds
    #     timeout: your_timeout_in_seconds
    #   delegate_to: localhost

- name: show ansible_python
  ansible.builtin.debug:
    msg: "{{ ansible_python }}"

- name: Copying the Keycloak Directory and its contents
  become: true 
  copy:
    src: "{{ deployment_resources }}"
    dest: "{{ deployment_workdir }}/"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0755

- name: Transfer an JAR artifact to the remote server
  ansible.builtin.copy:
    src: "{{ deployment_api_jar_src }}"
    dest: "{{ deployment_api_jar_workdir }}/api-backend-0.0.1-SNAPSHOT.jar"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0755

- name: Transfer an Docker artifact to the remote server
  ansible.builtin.copy:
    src: "{{ deployment_artifact }}"
    dest: "{{ deployment_workdir }}/docker-compose.yml"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0755

- name: Setup environment variables
  ansible.builtin.template:
    src: env.j2
    dest: "{{ deployment_workdir }}/.env"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0640

- name: Stop docker-compose
  community.docker.docker_compose:
    project_src: "{{ deployment_workdir }}"
    state: absent
    files:
    - docker-compose.yml

- name: Start docker-compose
  community.docker.docker_compose:
    project_src: "{{ deployment_workdir }}"
    state: present
    files:
    - docker-compose.yml
