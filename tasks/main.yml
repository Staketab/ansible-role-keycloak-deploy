---
- name: Ensure '{{ deployment_workdir }}' exists
  ansible.builtin.file:
    path: "{{ deployment_workdir }}"
    state: directory
    mode: 0755

- name: Install and upgrade pip
  pip:
    name: pip
    extra_args: --upgrade
    executable: pip3

- name: install pip3
  apt: name=python3-pip state=present 

- name: Install python3 modules
  ansible.builtin.pip:
    name: bottle
    state: forcereinstall
  loop:
  - bottle
  - docker-compose

- name: Run expect to wait for a successful PXE boot via out-of-band CIMC
  ansible.builtin.shell: |
    pip3 install dxlmispservice
    sudo apt install pkg-config
    pip3 install setuptools-rust
    pip install docker-compose

- name: show ansible_python
  ansible.builtin.debug:
    msg: "{{ ansible_python }}"

- name: Copying the Keycloak Directory and its contents
  become: true 
  copy:
    src: "{{ deployment_resources }}"
    dest: "{{ deployment_workdir }}/"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0755

- name: Transfer an JAR artifact to the remote server
  ansible.builtin.copy:
    src: "{{ deployment_api_jar_src }}"
    dest: "{{ deployment_api_jar_workdir }}/api-backend-0.0.1-SNAPSHOT.jar"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0755
  notify: restart_app

- name: Transfer an Docker artifact to the remote server
  ansible.builtin.copy:
    src: "{{ deployment_artifact }}"
    dest: "{{ deployment_workdir }}/docker-compose.yml"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0755
  notify: restart_app

- name: Setup environment variables
  ansible.builtin.template:
    src: env.j2
    dest: "{{ deployment_workdir }}/.env"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: 0640
  notify: restart_app

- name: Stop docker-compose
  community.docker.docker_compose:
    project_src: "{{ deployment_workdir }}"
    state: absent
    files:
    - docker-compose.yml
  notify: restart_app

- name: Start docker-compose
  community.docker.docker_compose:
    project_src: "{{ deployment_workdir }}"
    state: present
    files:
    - docker-compose.yml
  notify: restart_app
