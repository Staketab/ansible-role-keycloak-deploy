---
- name: Ensure '{{ deployment_workdir }}' exists
  ansible.builtin.file:
    path: "{{ deployment_workdir }}"
    state: directory
    mode: '0755'

- name: Install system dependencies
  ansible.builtin.apt:
    name: "{{ deployment_system_packages }}"
    state: present

- name: Install Docker Compose
  ansible.builtin.get_url:
    url: "{{ docker_compose_url }}"
    dest: "{{ docker_compose_path }}"
    owner: root
    group: root
    mode: 0o755

- name: Install python3 modules
  become: true
  ansible.builtin.pip:
    name: "{{ item }}"
    state: forcereinstall
  loop:
    - bottle
    - setuptools-rust
    - dxlmispservice

- name: Copying the Keycloak Directory and its contents
  become: true
  ansible.builtin.copy:
    src: "{{ deployment_resources }}"
    dest: "{{ deployment_workdir }}/"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: '0755'

- name: Transfer a JAR artifact to the remote server
  ansible.builtin.copy:
    src: "{{ deployment_api_jar_src }}"
    dest: "{{ deployment_api_jar_workdir }}/api-backend-0.0.1-SNAPSHOT.jar"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: '0755'

- name: Transfer a Docker artifact to the remote server
  ansible.builtin.copy:
    src: "{{ deployment_artifact }}"
    dest: "{{ deployment_workdir }}/docker-compose.yml"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: '0755'

- name: Setup environment variables
  ansible.builtin.template:
    src: env.j2
    dest: "{{ deployment_workdir }}/.env"
    owner: "{{ deployment_user }}"
    group: "{{ deployment_group }}"
    mode: '0640'

- name: Stop docker-compose
  community.docker.docker_compose_v2:
    project_src: "{{ deployment_workdir }}"
    state: absent
    files:
      - docker-compose.yml

- name: Start docker-compose
  community.docker.docker_compose_v2:
    project_src: "{{ deployment_workdir }}"
    state: present
    files:
      - docker-compose.yml
